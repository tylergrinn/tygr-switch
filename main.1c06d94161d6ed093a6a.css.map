{"version":3,"sources":["webpack://@tygr/switch/demo/main.scss","webpack://@tygr/switch/_index.scss"],"names":[],"mappings":"AAEA,eAGE,YACA,yBAGF,KACE,SAGF,KACE,aACA,uBACA,mBAGF,YACE,aACA,sBACA,sBAEA,cACE,WAIF,wBACE,mBACA,gBACA,iBCSE,sRDFF,UACA,aACA,aACA,YACA,UCFE,8SDFF,UACA,aACA,aACA,YACA,UCFE,8VDFF,UACA,aACA,aACA,YACA,UAKF,2BACE,gBACA,sBACA,YACA,sBAEA,iCACE,gCAEF,oCACE,gCAKN,qBACE,GACE,WAIJ,oBACE,KACE,UAEF,GACE,W","file":"main.1c06d94161d6ed093a6a.css","sourcesContent":["@import '../';\n\nhtml,\nbody,\n#app {\n  height: 100%;\n  background-color: #423d5c;\n}\n\nbody {\n  margin: 0;\n}\n\n#app {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n\n.tygr-login {\n  display: flex;\n  flex-direction: column;\n  background-color: white;\n\n  * {\n    margin: 8px;\n  }\n\n  // Styles applied to all [data-auth] elements\n  [data-auth] {\n    transition: all 0.3s;\n    max-height: 32px;\n    overflow: visible;\n\n    // animation: _fade-in 1s;\n  }\n\n  // Styles applied to [data-auth] elements when state is *INACTIVE*\n  @include switch('auth', login, register, reset-password) {\n    opacity: 0;\n    max-height: 0;\n    margin: 0 8px;\n    border: none;\n    padding: 0;\n\n    // animation: _fade-out 1s forwards;\n  }\n\n  .header button {\n    background: none;\n    border: 1px solid black;\n    padding: 8px;\n    background-color: white;\n\n    &:hover {\n      background-color: rgba(0, 0, 0, 0.1);\n    }\n    &.selected {\n      background-color: rgba(0, 0, 0, 0.2);\n    }\n  }\n}\n\n@keyframes _fade-out {\n  to {\n    opacity: 0;\n  }\n}\n\n@keyframes _fade-in {\n  from {\n    opacity: 0;\n  }\n  to {\n    opacity: 1;\n  }\n}\n","@use 'sass:meta';\n\n@import 'util';\n\n/**\n * @param {string} $name The name of the switch\n * @param {...string} $states A list of states the switch can be in\n */\n@mixin switch($name, $states...) {\n  @each $state in $states {\n    $stateEscaped: str-replace($state, '/', '__');\n\n    /*\n     * Generate partial paths from a '/' separated path\n     * IE: '/super/long/path' -> ['/', '/super', '/super/long', '/super/long/path']\n     */\n    $partials: [];\n    $appender: '';\n    @each $token in str-split($state, '/') {\n      @if $appender == '/' {\n        $appender: $appender + $token;\n      } @else {\n        $appender: $appender + '/' + $token;\n      }\n      $partials: append($partials, $appender);\n    }\n\n    $partialSelector: '';\n    @each $partial in $partials {\n      $partialSelector: $partialSelector +\n        \":not([data-#{$name}~='~#{$partial}'])\";\n    }\n\n    &[data-#{$name}-#{$stateEscaped}],\n    & [data-#{$name}-#{$stateEscaped}] {\n      // State named $state is currently active\n\n      /**\n       * Hide any elements with the data-$name attribute that has the '!$state' exclusionary syntax\n       * in its value\n       */\n      [data-#{$name}~='!#{$state}'],\n\n      /**\n       * If any elements with the data-$name attribute does not have $state in its value, nor is\n       * the value using the exclusionary syntax, then hide it\n       */\n      [data-#{$name}]:not([data-#{$name}~='#{$state}']):not([data-#{$name}*='!'])#{$partialSelector} {\n        @if (content-exists()) {\n          // Let mixin consumer override default inactive state styles\n          @content;\n        } @else {\n          display: none;\n          pointer-events: none;\n        }\n      }\n    }\n  }\n}\n"],"sourceRoot":""}